[gd_scene load_steps=5 format=2]

[ext_resource path="res://scenes/ui/HPbar.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=3]
script/source = "extends Node2D

export(int) var max_hitpoints = 100
export(int) var death_projectiles = 4
var hitpoints = max_hitpoints
const projectile_scene = preload(\"res://scenes/objects/Rock.tscn\")

func _ready():
	$HPbar.visible = false
	$HPbar.max_value = max_hitpoints

sync func destroy() -> void:
	$HPbar.value = 0
	#Mouse.reset()
	# Spawn projectiles in 8 dirs
	if is_network_master():
		rpc(\"instance_projectiles\", 1)
	queue_free() #TODO: its cooler if it gets broken and is repairable

sync func instance_projectiles(id):
	# Create projectiles firing out of each direction of the pillar
	var angle = global_rotation
	var angle_increment = 2*PI / death_projectiles
	var persistant_objects = get_node(\"/root/PersistantObjects\")
	for i in range(death_projectiles):
		var projectile_instance = projectile_scene.instance()
		projectile_instance.set_network_master(id) # set projectile owner
		projectile_instance.player_rotation = angle
		projectile_instance.global_position = global_position
		projectile_instance.name = \"BuildingProjectile_\" + self.name + \"_\" +str(i)
		
		
		persistant_objects.call_deferred(\"add_child\", projectile_instance)
		angle  += angle_increment

func damage(amount):
	hitpoints -= amount
	if hitpoints <= 0:
		if get_tree().is_network_server():
			rpc(\"destroy\")
		return true
	$HPbar.value = hitpoints
	
	if hitpoints == max_hitpoints:
		$HPbar.visible = false
	else:
		$HPbar.visible = true
	
	return false

func hit_by_damager(damage):
	damage(damage)

func hit_by_physical_damager(damage):
	damage(damage)

func _on_Hitbox_area_entered(area):
	if area.is_in_group(\"Object_damager\"):
		damage(area.get_parent().damage)

"

[sub_resource type="StreamTexture" id=1]
flags = 4
load_path = "res://.import/statue.png-18910c2d2418968e10862a40a3e959ea.stex"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 61.5, 64.5 )

[node name="Statue" type="StaticBody2D"]
script = SubResource( 3 )

[node name="Sprite" type="Sprite" parent="."]
position = Vector2( 34, -111 )
texture = SubResource( 1 )
offset = Vector2( 10, -26 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
polygon = PoolVector2Array( -65, 21, 2, 60, 68, 19, 5, -15 )

[node name="HPbar" parent="." instance=ExtResource( 2 )]
margin_left = -48.0
margin_top = -421.0
margin_right = 592.0
margin_bottom = -321.0
rect_scale = Vector2( 0.362703, 0.245242 )
rect_pivot_offset = Vector2( -107.407, 27.5074 )
max_value = 1000.0
value = 1000.0

[node name="Hitbox" type="Area2D" parent="."]

[node name="CollisionShape2D" type="CollisionShape2D" parent="Hitbox"]
position = Vector2( 2.5, -10.5 )
shape = SubResource( 2 )

[connection signal="area_entered" from="Hitbox" to="." method="_on_Hitbox_area_entered"]
[connection signal="mouse_entered" from="Hitbox" to="." method="_on_Hitbox_mouse_entered"]
